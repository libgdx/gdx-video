name: Java CI with Gradle

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  natives-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Install additional build dependencies
      run: brew install nasm meson

    - name: Build with Gradle
      run: ./gradlew :gdx-video-desktop:FFmpeg:buildFFmpegMacosAll :gdx-video-desktop:jnigenBuildMacosAll

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: natives-macos
        path: gdx-video-desktop/libs/**/*.dylib
        if-no-files-found: error

  natives-linux:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Install build dependencies and cross-compilation toolchains
      run: |
        sudo apt update
        sudo apt install -y --force-yes gcc g++
        sudo apt install -y --force-yes nasm meson
        sudo apt install -y --force-yes gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
        sudo apt install -y --force-yes gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libc6-dev-armhf-cross

    - name: Build natives with Gradle
      run: ./gradlew :gdx-video-desktop:FFmpeg:buildFFmpegLinuxAll :gdx-video-desktop:jnigenBuildLinuxAll

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: natives-linux
        path: gdx-video-desktop/libs/**/*.so
        if-no-files-found: error

  natives-windows:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Install build dependencies and cross-compilation toolchains
      run: |
        sudo apt update
        sudo apt install -y --force-yes nasm meson
        sudo apt install -y --force-yes mingw-w64 lib32z1

    - name: Build natives with Gradle
      run: ./gradlew :gdx-video-desktop:FFmpeg:buildFFmpegWindowsAll :gdx-video-desktop:jnigenBuildWindowsAll

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: natives-windows
        path: gdx-video-desktop/libs/**/*.dll
        if-no-files-found: error

  gradle-build:
    needs:
    - natives-macos
    - natives-linux
    - natives-windows
    runs-on: ubuntu-20.04
    env:
      ORG_GRADLE_PROJECT_GITHUB_USERNAME: ""
      ORG_GRADLE_PROJECT_GITHUB_API_TOKEN: ""
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: 'recursive'

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Download individual natives artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: natives-*
        path: gdx-video-desktop/libs
        merge-multiple: true

    - name: Create JAR with natives for desktop
      run: ./gradlew jnigenJarNativesDesktop --info

    - name: Creat android directory
      run: mkdir -p $HOME/.android

    - name: Create debug keystore for android
      run: keytool -genkey -v -keystore $HOME/.android/debug.keystore -storetype PKCS12 -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -noprompt -dname "CN=GdxVideo, OU=libGDX, O=libGDX, L=Unknown, ST=Unknown, C=US"

    - name: Build library and test programs with gradle
      run: ./gradlew build

    - name: Upload all output libs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: output-libs
        path: '**/build/libs/'
