apply plugin: 'maven-publish'
apply plugin: 'signing'

publishing {
    publications {
        aar(MavenPublication) {
            groupId = 'com.badlogicgames.gdx-video'
            artifactId = 'gdx-video-android'

            pom {
                name.set(rootProject.name)
                description.set('Video Extension for libGDX')
                url.set('https://github.com/libgdx/gdx-video')

                scm {
                    url.set('scm:git@github.com:libgdx/gdx-video.git')
                    connection.set('scm:git@github.com:libgdx/gdx-video.git')
                    developerConnection.set('scm:git@github.com:libgdx/gdx-video.git')
                }

                licenses {
                    license {
                        name.set('The Apache Software License, Version 2.0')
                        url.set('http://www.apache.org/licenses/LICENSE-2.0.txt')
                        distribution.set('repo')
                    }
                }

                developers {
                    developer {
                        id.set('SimonIT')
                        name.set('Simon Bullik')
                        email.set('simonit.orig@gmail.com')
                    }
                }
            }

            afterEvaluate {
                from components.release
            }
        }
    }
}

android {
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

signing {
    if (isReleaseBuild()) {
        useGpgCmd()
    }
    required { isReleaseBuild() }
    sign configurations.archives
}


task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    // JDK 1.8 is more strict then 1.7. Have JDK 1.8 behave like 1.7 for javadoc generation
    if (org.gradle.internal.jvm.Jvm.current().getJavaVersion() == JavaVersion.VERSION_1_8) {
        options.addStringOption('Xdoclint:none', '-quiet')
    }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}

afterEvaluate {
    androidJavadocs.classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
}
